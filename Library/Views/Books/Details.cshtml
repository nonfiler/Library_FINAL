@model Library.Models.Book
@using System.Security.Claims

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Author.NameSurname)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Genre)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            Średnia ocena
        </dt>
        <dd class="col-sm-10">
            @if (Model.Comments != null && Model.Comments.Any())
            {
                @(Model.Comments.Average(c => c.Score).ToString("F2"))
            }
            else
            {
                @:Brak ocen
            }
        </dd>
    </dl>
</div>

<!-- Formularz dodawania / edycji komentarza -->
<form id="commentForm" asp-controller="Books" asp-action="AddOrEditComment" method="post">
    <input type="hidden" id="ID" name="ID" value="" />
    <input type="hidden" name="BookID" value="@Model.ID" />
    <div class="form-group">
        <label for="Score">Score:</label>
        <select class="form-control" id="Score" name="Score">
            @for (int i = 1; i <= 5; i++)
            {
                <option value="@i">@i</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="Text">Comment:</label>
        <textarea class="form-control" id="Text" name="Text" rows="3"></textarea>
    </div>
    <button type="submit" class="btn btn-primary">Submit Comment</button>
</form>

<!-- Sekcja komentarzy -->
<div>
    <h4>Komentarze</h4>
    <hr />
    @if (Model?.Comments != null && Model.Comments.Any())
    {
        @foreach (var comment in Model.Comments)
        {
            <div id="comment@comment.ID" class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">@comment.User.UserName ocenił książkę na <strong>@comment.Score</strong>:</h5>
                    <p class="card-text">@comment.Text</p>
                    <button class="deleteCommentButton btn btn-danger" data-comment-id="@comment.ID">Usuń</button>
                </div>
            </div>
        }
    }
    else
    {
        <p>Nikt jeszcze nie skomentował tej książki.</p>
    }
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.ID">Edit</a> |
    <a asp-action="Catalog">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            var hasAddedReview = @Model.Comments.Any(c => c.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier));
            if (hasAddedReview) {
                alert("Już dodałeś recenzję do tej książki.");
            }
        });


        //Sending comment
        $(document).ready(function () {
            $("#commentForm").on("submit", function (event) {
                event.preventDefault();

                var url = $("#ID").val() == "" ? "/Books/AddOrEditComment" : "/Books/AddOrEditComment";

                $.ajax({
                    url: url,
                    type: "POST",
                    data: $(this).serialize(),
                    success: function (data) {
                        alert("Komentarz został dodany pomyślnie!");
                        location.reload();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(textStatus, errorThrown);
                        alert('Wystąpił błąd podczas dodawania komentarza: ' + errorThrown);
                    }
                });
            });
        });

        //Deleting comment
        $(".deleteCommentButton").on("click", function () {
            var commentId = $(this).data("comment-id");
            $.ajax({
                url: "/Books/DeleteComment",
                type: "POST",
                data: { id: commentId },
                success: function (data) {
                    if (data.success) {
                        $("#comment" + commentId).remove();
                        location.reload();
                    }
                }
            });
        });
    </script>
}
